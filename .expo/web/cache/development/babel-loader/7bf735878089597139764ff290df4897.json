{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState } from 'react';\nimport style from \"../styles/style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Alcometer = function Alcometer() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    weight = _useState2[0],\n    setWeight = _useState2[1];\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    bottles = _useState4[0],\n    setBottles = _useState4[1];\n  var _useState5 = useState(1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    time = _useState6[0],\n    setTime = _useState6[1];\n  var _useState7 = useState('male'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    sex = _useState8[0],\n    setSex = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    result = _useState10[0],\n    setResult = _useState10[1];\n  var _useState11 = useState(\"green\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    resultColor = _useState12[0],\n    setResultColor = _useState12[1];\n  function calculate() {\n    var litres = bottles * 0.33;\n    var initialGrams = litres * 8 * 4.5;\n    var burnedGrams = weight / 10 * time;\n    var remainingGrams = initialGrams - burnedGrams;\n    setResult(remainingGrams.toFixed(2));\n    var content = 0;\n    if (sex === 'male') {\n      content = remainingGrams / (weight * 0.7);\n    } else {\n      content = remainingGrams / (weight * 0.6);\n    }\n    if (content > 0) {\n      setResult(content);\n    } else {\n      setResult(0);\n    }\n  }\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: style.container,\n      children: [_jsx(Text, {\n        style: style.title,\n        children: \"Alcometer\"\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: style.label,\n          children: \"Weight : \"\n        }), _jsx(TextInput, {\n          style: style.textInput,\n          keyboardType: \"number-pad\",\n          value: weight,\n          onChangeText: function onChangeText(text) {\n            return setWeight(text);\n          }\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: style.label,\n          children: \"Bottles :\"\n        }), _jsx(TextInput, {\n          style: style.textInput,\n          id: \"bottles\",\n          keyboardType: \"number-pad\",\n          value: bottles,\n          onChangeText: function onChangeText(text) {\n            return setBottles(text);\n          }\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: style.label,\n          children: \"Time :\"\n        }), _jsx(TextInput, {\n          style: style.textInput,\n          id: \"time\",\n          keyboardType: \"number-pad\",\n          value: time,\n          onChangeText: function onChangeText(text) {\n            return setTime(text);\n          }\n        })]\n      }), _jsxs(View, {\n        style: style.container,\n        children: [_jsx(Text, {\n          style: style.title,\n          children: \"Gender: \"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setSex('male');\n          },\n          style: style.genderButton,\n          children: _jsx(Text, {\n            style: style.genderButtonText,\n            children: \"Male\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setSex('female');\n          },\n          style: style.genderButton,\n          children: _jsx(Text, {\n            style: style.genderButtonText,\n            children: \"Female\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: style.button,\n        children: [_jsx(Button, {\n          onPress: function onPress() {\n            return calculate();\n          },\n          children: _jsx(Text, {\n            style: style.buttonText,\n            children: \"SUBMIT\"\n          })\n        }), _jsxs(Text, {\n          style: style.label,\n          children: [\"Result : \", result.toFixed(2)]\n        })]\n      })]\n    })\n  });\n};\nexport default Alcometer;","map":{"version":3,"names":["React","useState","style","Alcometer","weight","setWeight","bottles","setBottles","time","setTime","sex","setSex","result","setResult","resultColor","setResultColor","calculate","litres","initialGrams","burnedGrams","remainingGrams","toFixed","content","container","title","label","textInput","text","genderButton","genderButtonText","button","buttonText"],"sources":["C:/Users/Toinen elämä/alcometer/react_alcometer/components/calculator.js"],"sourcesContent":["import { Button, Text, TextInput, TouchableOpacity, View, ScrollView } from 'react-native';\r\nimport React, {useState} from 'react';\r\nimport style from '../styles/style';\r\n\r\n\r\n\r\nconst Alcometer = () => {\r\n  const [weight, setWeight] = useState(0);\r\n  const [bottles, setBottles] = useState(1);\r\n  const [time, setTime] = useState(1);\r\n  const [sex, setSex] = useState('male');\r\n  const [result, setResult] = useState(0);\r\n\r\n  const [resultColor, setResultColor] = useState(\"green\");\r\n\r\n    function calculate() {\r\n  \r\n      const litres = bottles * 0.33;\r\n      const initialGrams = litres * 8 * 4.5;\r\n      const burnedGrams = weight / 10 * time;\r\n      const remainingGrams = initialGrams - burnedGrams;\r\n      setResult(remainingGrams.toFixed(2))\r\n    \r\n      let content = 0;\r\n      if (sex === 'male') {\r\n        content = remainingGrams / (weight * 0.7);\r\n      } else {\r\n        content = remainingGrams / (weight * 0.6);\r\n      }\r\n    \r\n      if (content > 0) {\r\n        setResult(content);\r\n      } else {\r\n        setResult(0);\r\n      }\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n    <ScrollView>\r\n    <View style={style.container}>\r\n        <Text style={style.title}>Alcometer</Text>\r\n      <View>\r\n        <Text style={style.label}>Weight : </Text>\r\n          <TextInput style={style.textInput}\r\n          keyboardType='number-pad'\r\n          value ={weight}\r\n          onChangeText= {(text) => setWeight(text)} />\r\n      </View>\r\n      <View>\r\n        <Text style={style.label}>Bottles :</Text>\r\n          <TextInput style={style.textInput}\r\n          id='bottles'\r\n          keyboardType='number-pad'\r\n          value={bottles}\r\n          onChangeText={(text) =>setBottles(text)}/>\r\n      </View>\r\n      <View>\r\n        <Text style={style.label}>Time :</Text>\r\n          <TextInput style={style.textInput}\r\n          id='time'\r\n          keyboardType='number-pad'\r\n          value={time}\r\n          onChangeText={(text) =>setTime(text)}/>\r\n      </View>\r\n\r\n      <View style={style.container}>\r\n       <Text style={style.title}>Gender: </Text>\r\n        <TouchableOpacity\r\n          onPress={() => setSex('male')} \r\n          style={style.genderButton}\r\n          >\r\n          <Text style={style.genderButtonText}>Male</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setSex('female')} \r\n        style={style.genderButton}\r\n        >\r\n          <Text style={style.genderButtonText}>Female</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n        \r\n      \r\n        <View style={style.button}>\r\n        <Button onPress = {() => calculate()}>\r\n          <Text style={style.buttonText}>SUBMIT</Text>\r\n        </Button>\r\n        <Text style={style.label}>Result : {result.toFixed(2)}</Text> \r\n      </View>\r\n    </View>\r\n    </ScrollView>\r\n    );\r\n  }\r\n\r\n  export default Alcometer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}