{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport style from \"../styles/style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Alcometer = function Alcometer() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    weight = _useState2[0],\n    setWeight = _useState2[1];\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    bottles = _useState4[0],\n    setBottles = _useState4[1];\n  var _useState5 = useState(1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    time = _useState6[0],\n    setTime = _useState6[1];\n  var _useState7 = useState('male'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    sex = _useState8[0],\n    setSex = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    result = _useState10[0],\n    setResult = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isDarkMode = _useState12[0],\n    setIsDarkMode = _useState12[1];\n  var _useState13 = useState('green'),\n    _useState14 = _slicedToArray(_useState13, 2),\n    resultColor = _useState14[0],\n    setResultColor = _useState14[1];\n  var gender = [{\n    label: 'Male',\n    value: 'male'\n  }, {\n    label: 'Female',\n    value: 'female'\n  }];\n  var handleAlert = function handleAlert() {\n    Alert.alert('Please fill in every ', 'My Alert Message', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'OK',\n      onPress: function onPress() {\n        return console.log('OK Pressed');\n      }\n    }], {\n      cancelable: false\n    });\n  };\n  function calculate() {\n    var litres = bottles * 0.33;\n    var gram = litres * 8 * 4.5;\n    var burning = weight / 10;\n    var remaining = gram - burning * time;\n    var content = null;\n    if (!weight || !bottles || !time) {\n      setResult(0);\n      return;\n    }\n    if (sex === 'male') {\n      content = remaining / (weight * 0.7);\n    } else {\n      content = remaining / (weight * 0.6);\n    }\n    setResult(content);\n    if (content > 0) {\n      setResult(content);\n    } else {\n      setResult(0);\n    }\n  }\n  function toggleDarkMode() {\n    setIsDarkMode(!isDarkMode);\n  }\n  return _jsxs(ScrollView, {\n    contentContainerStyle: [style.container, isDarkMode ? style.darkContainer : style.lightContainer],\n    children: [_jsxs(View, {\n      style: style.header,\n      children: [_jsx(Text, {\n        style: [style.title, isDarkMode ? style.darkText : style.lightText],\n        children: \"Alcometer\"\n      }), _jsx(Switch, {\n        value: isDarkMode,\n        onValueChange: toggleDarkMode,\n        style: style.switch\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: [style.label, isDarkMode ? style.darkText : style.lightText],\n        children: \"Weight :\"\n      }), _jsx(TextInput, {\n        style: style.textInput,\n        keyboardType: \"number-pad\",\n        value: weight.toString(),\n        onChangeText: function onChangeText(text) {\n          return setWeight(text);\n        }\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: [style.label, isDarkMode ? style.darkText : style.lightText],\n        children: \"Bottles :\"\n      }), _jsx(TextInput, {\n        style: style.textInput,\n        keyboardType: \"number-pad\",\n        value: bottles.toString(),\n        onChangeText: function onChangeText(text) {\n          return setBottles(text);\n        }\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(TextInput, {\n        style: style.textInput\n      }), _jsx(Text, {\n        style: [style.label, isDarkMode ? style.darkText : style.lightText],\n        children: \"Time :\"\n      }), _jsx(TextInput, {\n        style: style.textInput,\n        keyboardType: \"number-pad\",\n        value: time.toString(),\n        onChangeText: function onChangeText(text) {\n          return setTime(text);\n        }\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: [style.label, isDarkMode ? style.darkText : style.lightText],\n        children: \"Gender\"\n      }), gender.map(function (option) {\n        return _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return setSex(option.value);\n          },\n          children: [_jsx(View, {\n            style: [style.radioButtonIcon, isDarkMode ? style.radioButtonIconDark : style.radioButtonIcon]\n          }), _jsx(Text, {\n            style: [style.radioButtonText, style.radioButtonIconChecked, isDarkMode ? style.darkText : style.lightText],\n            children: option.label\n          })]\n        }, option.value);\n      })]\n    }), _jsx(View, {\n      style: style.button,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return calculate();\n        },\n        children: _jsx(Text, {\n          style: style.buttonText,\n          children: \"SUBMIT \\u2665\"\n        })\n      })\n    }), _jsxs(Text, {\n      style: [style.label, isDarkMode ? style.darkText : style.lightText],\n      children: [\"Result : \", result.toFixed(2)]\n    })]\n  });\n};\nexport default Alcometer;","map":{"version":3,"names":["React","useState","style","Alcometer","weight","setWeight","bottles","setBottles","time","setTime","sex","setSex","result","setResult","isDarkMode","setIsDarkMode","resultColor","setResultColor","gender","label","value","handleAlert","Alert","alert","text","onPress","console","log","cancelable","calculate","litres","gram","burning","remaining","content","toggleDarkMode","container","darkContainer","lightContainer","header","title","darkText","lightText","switch","textInput","toString","map","option","radioButtonIcon","radioButtonIconDark","radioButtonText","radioButtonIconChecked","button","buttonText","toFixed"],"sources":["C:/Users/Toinen elämä/alcometer/react_alcometer/components/calculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, ScrollView, Switch, Text, TextInput, TouchableOpacity, View, Alert } from 'react-native';\r\nimport style from '../styles/style';\r\n\r\nconst Alcometer = () => {\r\n  const [weight, setWeight] = useState(0);\r\n  const [bottles, setBottles] = useState(1);\r\n  const [time, setTime] = useState(1);\r\n  const [sex, setSex] = useState('male');\r\n  const [result, setResult] = useState(0);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [resultColor, setResultColor] = useState('green');\r\n\r\n  const gender = [\r\n    { label: 'Male', value: 'male' },\r\n    { label: 'Female', value: 'female' },\r\n  ];\r\n\r\n  const handleAlert = () => {\r\n    Alert.alert(\r\n      'Please fill in every ',\r\n      'My Alert Message',\r\n      [\r\n        {\r\n          text: 'Cancel',\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: 'OK',\r\n          onPress: () => console.log('OK Pressed')\r\n        }\r\n      ],\r\n      { cancelable: false }\r\n    );\r\n  }\r\n\r\n\r\n  function calculate() {\r\n    const litres = bottles * 0.33;\r\n    const gram = litres * 8 * 4.5;\r\n    const burning = weight / 10;\r\n    const remaining = gram - burning * time;\r\n    let content = null;\r\n  \r\n    if (!weight || !bottles || !time) {\r\n      setResult(0);\r\n      return;\r\n    }\r\n  \r\n    if (sex === 'male') {\r\n      content = remaining / (weight * 0.7);\r\n    } else {\r\n      content = remaining / (weight * 0.6);\r\n    }\r\n  \r\n    setResult(content);\r\n  \r\n    if (content > 0) {\r\n      setResult(content);\r\n    } else {\r\n      setResult(0);\r\n    }\r\n  }\r\n\r\n  function toggleDarkMode() {\r\n    setIsDarkMode(!isDarkMode);\r\n  }\r\n\r\n  return (\r\n    <ScrollView\r\n    contentContainerStyle={[\r\n      style.container,\r\n      isDarkMode ? style.darkContainer : style.lightContainer,\r\n    ]}\r\n    >\r\n      <View style={style.header}>\r\n        <Text style={[style.title, isDarkMode ? style.darkText : style.lightText]}>Alcometer</Text>\r\n        <Switch\r\n          value={isDarkMode}\r\n          onValueChange={toggleDarkMode}\r\n          style={style.switch}\r\n        />\r\n      </View>\r\n      <View>\r\n        <Text style={[style.label, isDarkMode ? style.darkText : style.lightText]}>Weight :</Text>\r\n        <TextInput\r\n          style={style.textInput}\r\n          keyboardType=\"number-pad\"\r\n          value={weight.toString()}\r\n          onChangeText={(text) => setWeight(text)}\r\n        />\r\n      </View>\r\n      <View>\r\n        <Text style={[style.label, isDarkMode ? style.darkText : style.lightText]}>Bottles :</Text>\r\n        <TextInput\r\n          style={style.textInput}\r\n          keyboardType=\"number-pad\"\r\n          value={bottles.toString()}\r\n          onChangeText={(text) => setBottles(text)}\r\n        />\r\n      </View>\r\n      <View>\r\n        <TextInput style={style.textInput} />\r\n        <Text style={[style.label, isDarkMode ? style.darkText : style.lightText]}>Time :</Text>\r\n        <TextInput\r\n          style={style.textInput}\r\n          keyboardType=\"number-pad\"\r\n          value={time.toString()}\r\n          onChangeText={(text) => setTime(text)}\r\n        />\r\n      </View>\r\n\r\n      <View>\r\n        <Text style={[style.label, isDarkMode ? style.darkText : style.lightText]}>Gender</Text>\r\n          {gender.map((option) => (\r\n        <TouchableOpacity \r\n           key={option.value}\r\n          onPress={() => setSex(option.value)}\r\n        >\r\n        <View style={[style.radioButtonIcon, isDarkMode ? style.radioButtonIconDark : style.radioButtonIcon]} />\r\n          <Text style={[style.radioButtonText, style.radioButtonIconChecked , isDarkMode ? style.darkText : style.lightText]}>{option.label}</Text>\r\n        </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n\r\n        <View style={style.button}>\r\n          <TouchableOpacity onPress={() => calculate()}>\r\n            <Text style={style.buttonText}>SUBMIT ♥</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <Text style={[style.label, isDarkMode ? style.darkText : style.lightText]}>Result : {result.toFixed(2)}</Text>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default Alcometer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}