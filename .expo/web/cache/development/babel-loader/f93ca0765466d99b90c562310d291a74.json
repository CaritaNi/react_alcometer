{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport styles from \"../styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Alcometer = function Alcometer() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    weight = _useState2[0],\n    setWeight = _useState2[1];\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    bottles = _useState4[0],\n    setBottles = _useState4[1];\n  var _useState5 = useState(1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    time = _useState6[0],\n    setTime = _useState6[1];\n  var _useState7 = useState('male'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    sex = _useState8[0],\n    setSex = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    result = _useState10[0],\n    setResult = _useState10[1];\n  var _useState11 = useState('green'),\n    _useState12 = _slicedToArray(_useState11, 2),\n    resultColor = _useState12[0],\n    setResultColor = _useState12[1];\n  function calculate() {\n    var litres = bottles * 0.33;\n    var gram = litres * 8 * 4.5;\n    var burning = weight / 10;\n    var remaining = gram - burning * time;\n    var content = 0;\n    if (sex === 'male') {\n      content = remaining / (weight * 0.7);\n    } else {\n      content = remaining / (weight * 0.6);\n    }\n    setResult(content > 0 ? content : 0);\n  }\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Alcometer\"\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Weight:\"\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          keyboardType: \"number-pad\",\n          value: weight.toString(),\n          onChangeText: function onChangeText(text) {\n            return setWeight(parseFloat(text));\n          }\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Bottles:\"\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          onChangeText: function onChangeText(text) {\n            return setBottles(parseFloat(text));\n          }\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Time:\"\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          keyboardType: \"number-pad\",\n          value: time.toString(),\n          onChangeText: function onChangeText(text) {\n            return setTime(parseFloat(text));\n          }\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Gender:\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setSex('male');\n          },\n          style: style.genderButton,\n          children: _jsx(Text, {\n            style: style.text,\n            children: \"Male\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setSex('female');\n          },\n          style: style.genderButton,\n          children: _jsx(Text, {\n            style: style.text,\n            children: \"Female\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: style.button,\n        children: [_jsx(Button, {\n          onPress: function onPress() {\n            return calculate();\n          },\n          children: _jsx(Text, {\n            style: style.text,\n            children: \"SUBMIT\"\n          })\n        }), _jsxs(Text, {\n          style: style.label,\n          children: [\"Result : \", result.toFixed(2)]\n        })]\n      })]\n    })\n  });\n};\nexport default Alcometer;","map":{"version":3,"names":["React","useState","styles","Alcometer","weight","setWeight","bottles","setBottles","time","setTime","sex","setSex","result","setResult","resultColor","setResultColor","calculate","litres","gram","burning","remaining","content","container","title","label","textInput","toString","text","parseFloat","style","genderButton","button","toFixed"],"sources":["C:/Users/Toinen elämä/alcometer/react_alcometer/components/calculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Text, TextInput, TouchableOpacity, View, ScrollView } from 'react-native';\r\nimport styles from '../styles';\r\n\r\nconst Alcometer = () => {\r\n  const [weight, setWeight] = useState(0);\r\n  const [bottles, setBottles] = useState(1);\r\n  const [time, setTime] = useState(1);\r\n  const [sex, setSex] = useState('male');\r\n  const [result, setResult] = useState(0);\r\n  const [resultColor, setResultColor] = useState('green');\r\n\r\n  function calculate() {\r\n    const litres = bottles * 0.33;\r\n    const gram = litres * 8 * 4.5;\r\n    const burning = weight / 10;\r\n    const remaining = gram - burning * time;\r\n    let content = 0;\r\n    if (sex === 'male') {\r\n      content = remaining / (weight * 0.7);\r\n    } else {\r\n      content = remaining / (weight * 0.6);\r\n    }\r\n    setResult(content > 0 ? content : 0);\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Alcometer</Text>\r\n        <View>\r\n          <Text style={styles.label}>Weight:</Text>\r\n          <TextInput\r\n            style={styles.textInput}\r\n            keyboardType=\"number-pad\"\r\n            value={weight.toString()}\r\n            onChangeText={(text) => setWeight(parseFloat(text))}\r\n          />\r\n        </View>\r\n        <View>\r\n          <Text style={styles.label}>Bottles:</Text>\r\n          <TextInput\r\n            style={styles.textInput}\r\n            onChangeText={(text) => setBottles(parseFloat(text))}\r\n          />\r\n        </View>\r\n        <View>\r\n          <Text style={styles.label}>Time:</Text>\r\n          <TextInput\r\n            style={styles.textInput}\r\n            keyboardType=\"number-pad\"\r\n            value={time.toString()}\r\n            onChangeText={(text) => setTime(parseFloat(text))}\r\n          />\r\n        </View>\r\n        <View>\r\n          <Text style={styles.label}>Gender:</Text>\r\n          <TouchableOpacity\r\n          onPress={() => setSex('male')} \r\n          style={style.genderButton}\r\n          >\r\n          <Text style={style.text}>Male</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setSex('female')} \r\n        style={style.genderButton}\r\n        >\r\n          <Text style={style.text}>Female</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n        \r\n      \r\n        <View style={style.button}>\r\n        <Button onPress = {() => calculate()}>\r\n          <Text style={style.text}>SUBMIT</Text>\r\n        </Button>\r\n        <Text style={style.label}>Result : {result.toFixed(2)}</Text> \r\n      </View>\r\n    </View>\r\n    </ScrollView>\r\n    );\r\n  }\r\n\r\n  export default Alcometer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}