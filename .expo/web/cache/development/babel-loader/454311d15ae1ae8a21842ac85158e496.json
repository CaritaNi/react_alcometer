{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState } from 'react';\nimport style from \"../styles/style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Alcometer = function Alcometer() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    weight = _useState2[0],\n    setWeight = _useState2[1];\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    bottles = _useState4[0],\n    setBottles = _useState4[1];\n  var _useState5 = useState(1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    time = _useState6[0],\n    setTime = _useState6[1];\n  var _useState7 = useState('male'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    sex = _useState8[0],\n    setSex = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    result = _useState10[0],\n    setResult = _useState10[1];\n  var _useState11 = useState(\"green\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    resultColor = _useState12[0],\n    setResultColor = _useState12[1];\n  function calculate() {\n    var content = 0;\n    var litres = bottles * 0.33;\n    var gram = litres * 8 * 4.5;\n    var burning = weight / 10;\n    var remaining = gram - burning * time;\n    bottles * 0.33 * 8 * 4.5 - weight / 10 * time, _readOnlyError(\"gram\");\n    null, _readOnlyError(\"result\");\n    if (sex === 'male') {\n      remaining / (weight * 0.7), _readOnlyError(\"content\");\n    } else {\n      remaining / (weight * 0.6), _readOnlyError(\"content\");\n    }\n    setResult(content);\n    if (content > 0) {\n      setResult(content);\n    } else {\n      setResult(0);\n    }\n  }\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: style.container,\n      children: [_jsx(Text, {\n        style: style.title,\n        children: \"Alcometer\"\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: style.label,\n          children: \"Weight : \"\n        }), _jsx(TextInput, {\n          style: style.textInput,\n          keyboardType: \"number-pad\",\n          value: weight,\n          onChangeText: function onChangeText(text) {\n            return setWeight(text);\n          }\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(TextInput, {\n          style: style.textInput\n        }), _jsx(Text, {\n          style: style.label,\n          children: \"Bottles :\"\n        }), _jsx(TextInput, {\n          style: style.textInput,\n          id: \"bottles\",\n          keyboardType: \"number-pad\",\n          value: bottles,\n          onChangeText: function onChangeText(text) {\n            return setBottles(text);\n          }\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(TextInput, {\n          style: style.textInput\n        }), _jsx(Text, {\n          style: style.label,\n          children: \"Time :\"\n        }), _jsx(TextInput, {\n          style: style.textInput,\n          id: \"time\",\n          keyboardType: \"number-pad\",\n          value: time,\n          onChangeText: function onChangeText(text) {\n            return setTime(text);\n          }\n        })]\n      }), _jsxs(View, {\n        style: style.container,\n        children: [_jsx(TextInput, {\n          style: style.textInput\n        }), _jsx(Text, {\n          style: style.title,\n          children: \"Gender: \"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setSex('male');\n          },\n          style: style.genderButton,\n          children: _jsx(Text, {\n            style: style.text,\n            children: \"Male\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setSex();\n          },\n          style: style.genderButton,\n          children: _jsx(Text, {\n            style: style.text,\n            children: \"Female\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: style.button,\n        children: [_jsx(Button, {\n          onPress: function onPress() {\n            return calculate();\n          },\n          children: _jsx(Text, {\n            style: style.text,\n            children: \"SUBMIT\"\n          })\n        }), _jsx(Text, {\n          style: style.label,\n          children: \"Result :\"\n        })]\n      })]\n    })\n  });\n};\nexport default Alcometer;","map":{"version":3,"names":["React","useState","style","Alcometer","weight","setWeight","bottles","setBottles","time","setTime","sex","setSex","result","setResult","resultColor","setResultColor","calculate","content","litres","gram","burning","remaining","container","title","label","textInput","text","genderButton","button"],"sources":["C:/Users/Toinen elämä/alcometer/react_alcometer/components/calculator.js"],"sourcesContent":["import { Button, Text, TextInput, TouchableOpacity, View, ScrollView } from 'react-native';\r\nimport React, {useState} from 'react';\r\nimport style from '../styles/style';\r\n\r\n\r\n\r\nconst Alcometer = () => {\r\n  const [weight, setWeight] = useState(0);\r\n  const [bottles, setBottles] = useState(1);\r\n  const [time, setTime] = useState(1);\r\n  const [sex, setSex] = useState('male');\r\n  const [result, setResult] = useState(0);\r\n\r\n  const [resultColor, setResultColor] = useState(\"green\");\r\n\r\n    function calculate() {\r\n  \r\n      const content = 0;\r\n      const litres = bottles * 0.33;\r\n      const gram = litres * 8 * 4.5;\r\n      const burning = weight / 10;\r\n      const remaining = gram - (burning * time);\r\n\r\n      gram = ((bottles * 0.33) * 8 * 4.5) - ((weight / 10) * time);\r\n      result = null;\r\n\r\n      if (sex === 'male'){\r\n        content= remaining / (weight * 0.7);\r\n      }\r\n      else {\r\n        content= remaining / (weight * 0.6);\r\n      }\r\n      setResult(content);\r\n      \r\n      if (content > 0){\r\n        setResult(content)\r\n      } else {\r\n        setResult(0)\r\n      }\r\n\r\n    \r\n\r\n    \r\n    }\r\n\r\n\r\n  \r\n    \r\n    return (\r\n    <ScrollView>\r\n    <View style={style.container}>\r\n        <Text style={style.title}>Alcometer</Text>\r\n      <View>\r\n        <Text style={style.label}>Weight : </Text>\r\n          <TextInput style={style.textInput}\r\n          keyboardType='number-pad'\r\n          value ={weight}\r\n          onChangeText= {text => setWeight(text)} />\r\n      </View>\r\n      <View>\r\n        <TextInput style={style.textInput}/>\r\n        <Text style={style.label}>Bottles :</Text>\r\n          <TextInput style={style.textInput}\r\n          id='bottles'\r\n          keyboardType='number-pad'\r\n          value={bottles}\r\n          onChangeText={text =>setBottles(text)}/>\r\n      </View>\r\n      <View>\r\n        <TextInput style={style.textInput}/>\r\n        <Text style={style.label}>Time :</Text>\r\n          <TextInput style={style.textInput}\r\n          id='time'\r\n          keyboardType='number-pad'\r\n          value={time}\r\n          onChangeText={text =>setTime(text)}/>\r\n      </View>\r\n\r\n      <View style={style.container}>\r\n      <TextInput style={style.textInput}/>\r\n       <Text style={style.title}>Gender: </Text>\r\n        <TouchableOpacity\r\n          onPress={() => setSex('male')} \r\n          style={style.genderButton}>\r\n          <Text style={style.text}>Male</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setSex()} style={style.genderButton}>\r\n          <Text style={style.text}>Female</Text>\r\n          </TouchableOpacity>\r\n      </View>\r\n        \r\n      \r\n        <View style={style.button}>\r\n        <Button onPress = {() => calculate()}>\r\n          <Text style={style.text}>SUBMIT</Text>\r\n        </Button>\r\n        <Text style={style.label}>Result :</Text> \r\n      </View>\r\n    </View>\r\n    </ScrollView>\r\n    );\r\n  }\r\n\r\n  export default Alcometer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}