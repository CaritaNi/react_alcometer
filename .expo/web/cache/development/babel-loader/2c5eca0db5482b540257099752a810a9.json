{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState } from 'react';\nimport style from \"../styles/style\";\nimport radioButton from \"../components/radioButton\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Alcometer = function Alcometer() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    weight = _useState2[0],\n    setWeight = _useState2[1];\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    bottles = _useState4[0],\n    setBottles = _useState4[1];\n  var _useState5 = useState(1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    time = _useState6[0],\n    setTime = _useState6[1];\n  var _useState7 = useState('male'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    sex = _useState8[0],\n    setSex = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    result = _useState10[0],\n    setResult = _useState10[1];\n  var _useState11 = useState(\"green\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    resultColor = _useState12[0],\n    setResultColor = _useState12[1];\n  ;\n  var ToggleDarkMode = function ToggleDarkMode() {\n    var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isDarkMode = _useState14[0],\n      setIsDarkMode = _useState14[1];\n    var toggleDarkMode = function toggleDarkMode() {\n      return setIsDarkMode(function (previousState) {\n        return !previousState;\n      });\n    };\n    var gender = [{\n      label: 'Male',\n      value: 'male'\n    }, {\n      label: 'Female',\n      value: 'female'\n    }];\n  };\n  function calculate() {\n    var litres = bottles * 0.33;\n    var gram = litres * 8 * 4.5;\n    var burning = weight / 10;\n    var remaining = gram - burning * time;\n    var content = 0;\n    if (sex === 'male') {\n      content = remaining / (weight * 0.7);\n    } else {\n      content = remaining / (weight * 0.6);\n    }\n    setResult(content);\n    if (content > 0) {\n      setResult(content);\n    } else {\n      setResult(0);\n    }\n  }\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: style.container,\n      children: [_jsx(Text, {\n        style: style.title,\n        children: \"Alcometer\"\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: style.label,\n          children: \"Weight : \"\n        }), _jsx(TextInput, {\n          style: style.textInput,\n          keyboardType: \"number-pad\",\n          value: weight,\n          onChangeText: function onChangeText(text) {\n            return setWeight(text);\n          }\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: style.label,\n          children: \"Bottles :\"\n        }), _jsx(TextInput, {\n          style: style.textInput,\n          id: \"bottles\",\n          keyboardType: \"number-pad\",\n          value: bottles,\n          onChangeText: function onChangeText(text) {\n            return setBottles(text);\n          }\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: style.label,\n          children: \"Time :\"\n        }), _jsx(TextInput, {\n          style: style.textInput,\n          id: \"time\",\n          keyboardType: \"number-pad\",\n          value: time,\n          onChangeText: function onChangeText(text) {\n            return setTime(text);\n          }\n        })]\n      }), _jsxs(View, {\n        style: style.container,\n        children: [_jsx(Text, {\n          style: style.title,\n          children: \"Gender\"\n        }), gender.map(function (item) {\n          return _jsxs(TouchableOpacity, {\n            style: [style.radioButton, sex === item.value ? style.radioButtonIconChecked : {}],\n            onPress: function onPress() {\n              return setSex(item.value);\n            },\n            children: [_jsx(View, {\n              style: style.radioButtonIcon\n            }), _jsx(Text, {\n              style: style.radioButtonText,\n              children: item.label\n            })]\n          }, item.value);\n        })]\n      }), _jsx(View, {\n        style: style.button,\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return calculate();\n          },\n          children: _jsx(Text, {\n            style: style.buttonText,\n            children: \"SUBMIT\"\n          })\n        })\n      }), _jsxs(Text, {\n        style: style.label,\n        children: [\"Result : \", result.toFixed(2)]\n      })]\n    })\n  });\n};\nexport default Alcometer;","map":{"version":3,"names":["React","useState","style","radioButton","Alcometer","weight","setWeight","bottles","setBottles","time","setTime","sex","setSex","result","setResult","resultColor","setResultColor","ToggleDarkMode","isDarkMode","setIsDarkMode","toggleDarkMode","previousState","gender","label","value","calculate","litres","gram","burning","remaining","content","container","title","textInput","text","map","item","radioButtonIconChecked","radioButtonIcon","radioButtonText","button","buttonText","toFixed"],"sources":["C:/Users/Toinen elämä/alcometer/react_alcometer/components/calculator.js"],"sourcesContent":["import { Button, Text, TextInput, TouchableOpacity, View, ScrollView } from 'react-native';\r\nimport React, {useState} from 'react';\r\nimport style from '../styles/style';\r\nimport radioButton from '../components/radioButton';\r\nimport { Switch } from 'react-native';\r\n\r\nconst Alcometer = () => {\r\n  const [weight, setWeight] = useState(0);\r\n  const [bottles, setBottles] = useState(1);\r\n  const [time, setTime] = useState(1);\r\n  const [sex, setSex] = useState('male');\r\n  const [result, setResult] = useState(0);\r\n  const [resultColor, setResultColor] = useState(\"green\");\r\n  ;\r\n\r\nconst ToggleDarkMode = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  const toggleDarkMode = () => setIsDarkMode(previousState => !previousState);\r\n\r\n  const gender = [\r\n    {\r\n      label: 'Male',\r\n      value: 'male'\r\n    },\r\n    {\r\n      label: 'Female',\r\n      value: 'female'\r\n    }\r\n  ];\r\n}\r\n\r\n  function calculate() {\r\n    const litres = bottles * 0.33;\r\n    const gram = litres * 8 * 4.5;\r\n    const burning = weight / 10;\r\n    const remaining = gram - (burning * time);\r\n    let content = 0;\r\n\r\n    if (sex === 'male') {\r\n      content = remaining / (weight * 0.7);\r\n    } else {\r\n      content = remaining / (weight * 0.6);\r\n    }\r\n    setResult(content);\r\n      \r\n    if (content > 0) {\r\n      setResult(content);\r\n    } else {\r\n      setResult(0);\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <ScrollView>\r\n      <View style={style.container}>\r\n        <Text style={style.title}>Alcometer</Text>\r\n\r\n        <View>\r\n          <Text style={style.label}>Weight : </Text>\r\n          <TextInput\r\n            style={style.textInput}\r\n            keyboardType='number-pad'\r\n            value={weight}\r\n            onChangeText={text => setWeight(text)}\r\n          />\r\n        </View>\r\n\r\n        <View>\r\n          <Text style={style.label}>Bottles :</Text>\r\n          <TextInput\r\n            style={style.textInput}\r\n            id='bottles'\r\n            keyboardType='number-pad'\r\n            value={bottles}\r\n            onChangeText={text => setBottles(text)}\r\n          />\r\n        </View>\r\n\r\n        <View>\r\n          <Text style={style.label}>Time :</Text>\r\n          <TextInput\r\n            style={style.textInput}\r\n            id='time'\r\n            keyboardType='number-pad'\r\n            value={time}\r\n            onChangeText={text => setTime(text)}\r\n          />\r\n        </View>\r\n\r\n        <View style={style.container}>\r\n          <Text style={style.title}>Gender</Text>\r\n          {gender.map((item) => (\r\n            <TouchableOpacity\r\n              key={item.value}\r\n              style={[\r\n                style.radioButton,\r\n                sex === item.value ? style.radioButtonIconChecked : {},\r\n              ]}\r\n              onPress={() => setSex(item.value)}\r\n            >\r\n              <View style={style.radioButtonIcon} />\r\n              <Text style={style.radioButtonText}>{item.label}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n\r\n        <View style={style.button}>\r\n          <TouchableOpacity onPress={() => calculate()}>\r\n            <Text style={style.buttonText}>SUBMIT</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <Text style={style.label}>Result : {result.toFixed(2)}</Text>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default Alcometer;"],"mappings":";;;;;;;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK;AACZ,OAAOC,WAAW;AAAkC;AAAA;AAAA;AAGpD,IAAMC,SAAS,GAAG,SAAZA,SAAS,GAAS;EACtB,gBAA4BH,QAAQ,CAAC,CAAC,CAAC;IAAA;IAAhCI,MAAM;IAAEC,SAAS;EACxB,iBAA8BL,QAAQ,CAAC,CAAC,CAAC;IAAA;IAAlCM,OAAO;IAAEC,UAAU;EAC1B,iBAAwBP,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA5BQ,IAAI;IAAEC,OAAO;EACpB,iBAAsBT,QAAQ,CAAC,MAAM,CAAC;IAAA;IAA/BU,GAAG;IAAEC,MAAM;EAClB,iBAA4BX,QAAQ,CAAC,CAAC,CAAC;IAAA;IAAhCY,MAAM;IAAEC,SAAS;EACxB,kBAAsCb,QAAQ,CAAC,OAAO,CAAC;IAAA;IAAhDc,WAAW;IAAEC,cAAc;EAClC;EAEF,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;IAC3B,kBAAoChB,QAAQ,CAAC,KAAK,CAAC;MAAA;MAA5CiB,UAAU;MAAEC,aAAa;IAEhC,IAAMC,cAAc,GAAG,SAAjBA,cAAc;MAAA,OAASD,aAAa,CAAC,UAAAE,aAAa;QAAA,OAAI,CAACA,aAAa;MAAA,EAAC;IAAA;IAE3E,IAAMC,MAAM,GAAG,CACb;MACEC,KAAK,EAAE,MAAM;MACbC,KAAK,EAAE;IACT,CAAC,EACD;MACED,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE;IACT,CAAC,CACF;EACH,CAAC;EAEC,SAASC,SAAS,GAAG;IACnB,IAAMC,MAAM,GAAGnB,OAAO,GAAG,IAAI;IAC7B,IAAMoB,IAAI,GAAGD,MAAM,GAAG,CAAC,GAAG,GAAG;IAC7B,IAAME,OAAO,GAAGvB,MAAM,GAAG,EAAE;IAC3B,IAAMwB,SAAS,GAAGF,IAAI,GAAIC,OAAO,GAAGnB,IAAK;IACzC,IAAIqB,OAAO,GAAG,CAAC;IAEf,IAAInB,GAAG,KAAK,MAAM,EAAE;MAClBmB,OAAO,GAAGD,SAAS,IAAIxB,MAAM,GAAG,GAAG,CAAC;IACtC,CAAC,MAAM;MACLyB,OAAO,GAAGD,SAAS,IAAIxB,MAAM,GAAG,GAAG,CAAC;IACtC;IACAS,SAAS,CAACgB,OAAO,CAAC;IAElB,IAAIA,OAAO,GAAG,CAAC,EAAE;MACfhB,SAAS,CAACgB,OAAO,CAAC;IACpB,CAAC,MAAM;MACLhB,SAAS,CAAC,CAAC,CAAC;IACd;EACF;EAEA,OACE,KAAC,UAAU;IAAA,UACT,MAAC,IAAI;MAAC,KAAK,EAAEZ,KAAK,CAAC6B,SAAU;MAAA,WAC3B,KAAC,IAAI;QAAC,KAAK,EAAE7B,KAAK,CAAC8B,KAAM;QAAA,UAAC;MAAS,EAAO,EAE1C,MAAC,IAAI;QAAA,WACH,KAAC,IAAI;UAAC,KAAK,EAAE9B,KAAK,CAACqB,KAAM;UAAA,UAAC;QAAS,EAAO,EAC1C,KAAC,SAAS;UACR,KAAK,EAAErB,KAAK,CAAC+B,SAAU;UACvB,YAAY,EAAC,YAAY;UACzB,KAAK,EAAE5B,MAAO;UACd,YAAY,EAAE,sBAAA6B,IAAI;YAAA,OAAI5B,SAAS,CAAC4B,IAAI,CAAC;UAAA;QAAC,EACtC;MAAA,EACG,EAEP,MAAC,IAAI;QAAA,WACH,KAAC,IAAI;UAAC,KAAK,EAAEhC,KAAK,CAACqB,KAAM;UAAA,UAAC;QAAS,EAAO,EAC1C,KAAC,SAAS;UACR,KAAK,EAAErB,KAAK,CAAC+B,SAAU;UACvB,EAAE,EAAC,SAAS;UACZ,YAAY,EAAC,YAAY;UACzB,KAAK,EAAE1B,OAAQ;UACf,YAAY,EAAE,sBAAA2B,IAAI;YAAA,OAAI1B,UAAU,CAAC0B,IAAI,CAAC;UAAA;QAAC,EACvC;MAAA,EACG,EAEP,MAAC,IAAI;QAAA,WACH,KAAC,IAAI;UAAC,KAAK,EAAEhC,KAAK,CAACqB,KAAM;UAAA,UAAC;QAAM,EAAO,EACvC,KAAC,SAAS;UACR,KAAK,EAAErB,KAAK,CAAC+B,SAAU;UACvB,EAAE,EAAC,MAAM;UACT,YAAY,EAAC,YAAY;UACzB,KAAK,EAAExB,IAAK;UACZ,YAAY,EAAE,sBAAAyB,IAAI;YAAA,OAAIxB,OAAO,CAACwB,IAAI,CAAC;UAAA;QAAC,EACpC;MAAA,EACG,EAEP,MAAC,IAAI;QAAC,KAAK,EAAEhC,KAAK,CAAC6B,SAAU;QAAA,WAC3B,KAAC,IAAI;UAAC,KAAK,EAAE7B,KAAK,CAAC8B,KAAM;UAAA,UAAC;QAAM,EAAO,EACtCV,MAAM,CAACa,GAAG,CAAC,UAACC,IAAI;UAAA,OACf,MAAC,gBAAgB;YAEf,KAAK,EAAE,CACLlC,KAAK,CAACC,WAAW,EACjBQ,GAAG,KAAKyB,IAAI,CAACZ,KAAK,GAAGtB,KAAK,CAACmC,sBAAsB,GAAG,CAAC,CAAC,CACtD;YACF,OAAO,EAAE;cAAA,OAAMzB,MAAM,CAACwB,IAAI,CAACZ,KAAK,CAAC;YAAA,CAAC;YAAA,WAElC,KAAC,IAAI;cAAC,KAAK,EAAEtB,KAAK,CAACoC;YAAgB,EAAG,EACtC,KAAC,IAAI;cAAC,KAAK,EAAEpC,KAAK,CAACqC,eAAgB;cAAA,UAAEH,IAAI,CAACb;YAAK,EAAQ;UAAA,GARlDa,IAAI,CAACZ,KAAK,CASE;QAAA,CACpB,CAAC;MAAA,EACG,EAEP,KAAC,IAAI;QAAC,KAAK,EAAEtB,KAAK,CAACsC,MAAO;QAAA,UACxB,KAAC,gBAAgB;UAAC,OAAO,EAAE;YAAA,OAAMf,SAAS,EAAE;UAAA,CAAC;UAAA,UAC3C,KAAC,IAAI;YAAC,KAAK,EAAEvB,KAAK,CAACuC,UAAW;YAAA,UAAC;UAAM;QAAO;MAC3B,EACd,EACP,MAAC,IAAI;QAAC,KAAK,EAAEvC,KAAK,CAACqB,KAAM;QAAA,WAAC,WAAS,EAACV,MAAM,CAAC6B,OAAO,CAAC,CAAC,CAAC;MAAA,EAAQ;IAAA;EACxD,EACI;AAEjB,CAAC;AAED,eAAetC,SAAS"},"metadata":{},"sourceType":"module"}